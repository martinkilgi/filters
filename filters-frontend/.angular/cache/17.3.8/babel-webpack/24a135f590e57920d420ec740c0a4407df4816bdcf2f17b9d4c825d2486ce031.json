{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./app.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./app.component.scss?ngResource\";\nimport { Component, inject } from '@angular/core';\nimport { FilterService } from './service/filter.service';\nimport { Subscription } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddFilterComponent } from './components/add-filter/add-filter.component';\nimport { state, style, transition, animate, trigger } from '@angular/animations';\nimport { CriteriaType } from './model/criteria-type';\nlet AppComponent = class AppComponent {\n  constructor(filterService) {\n    this.filterService = filterService;\n    this.dialog = inject(MatDialog);\n    this.CriteriaType = CriteriaType;\n    this.displayedColumns = ['expand', 'name', 'criterias'];\n    this.criteriaDisplayedColumns = ['type', 'comparator', 'value'];\n    this.filters = [];\n    this.filtersSub = new Subscription();\n  }\n  ngOnInit() {\n    this.filtersSub = this.filterService.getFilters().subscribe(filters => {\n      this.filters = filters;\n    });\n  }\n  openAddFilterDialog() {\n    this.dialog.open(AddFilterComponent, {\n      width: '1200px'\n    });\n  }\n  ngOnDestroy() {\n    this.filtersSub?.unsubscribe();\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: FilterService\n  }];\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  template: __NG_CLI_RESOURCE__0,\n  animations: [trigger('detailExpand', [state('collapsed', style({\n    height: '0px',\n    minHeight: '0'\n  })), state('expanded', style({\n    height: '*'\n  })), transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))])],\n  styles: [__NG_CLI_RESOURCE__1]\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["Component","inject","FilterService","Subscription","MatDialog","AddFilterComponent","state","style","transition","animate","trigger","CriteriaType","AppComponent","constructor","filterService","dialog","displayedColumns","criteriaDisplayedColumns","filters","filtersSub","ngOnInit","getFilters","subscribe","openAddFilterDialog","open","width","ngOnDestroy","unsubscribe","_","__decorate","selector","template","__NG_CLI_RESOURCE__0","animations","height","minHeight"],"sources":["/home/martin/Documents/Projects/filters/filters-frontend/src/app/app.component.ts"],"sourcesContent":["import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { FilterService } from './service/filter.service';\nimport { Filter } from './model/filter';\nimport { Subscription } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddFilterComponent } from './components/add-filter/add-filter.component';\nimport { state, style, transition, animate, trigger } from '@angular/animations';\nimport { CriteriaType } from './model/criteria-type';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  readonly dialog = inject(MatDialog);\n\n  CriteriaType = CriteriaType;\n\n  displayedColumns: string[] = ['expand', 'name', 'criterias'];\n  criteriaDisplayedColumns: string[] = ['type', 'comparator', 'value'];\n  expandedFilter: Filter | null;\n\n  filters: Filter[] = [];\n  filtersSub: Subscription = new Subscription();\n\n  constructor(\n    private filterService: FilterService\n  ) { }\n\n  ngOnInit(): void {\n    this.filtersSub = this.filterService.getFilters().subscribe((filters: Filter[]) => {\n      this.filters = filters;\n    })\n  }\n\n  openAddFilterDialog() {\n    this.dialog.open(AddFilterComponent, {width: '1200px'});\n  }\n\n  ngOnDestroy(): void {\n    this.filtersSub?.unsubscribe();\n  }\n}\n"],"mappings":";;;AAAA,SAASA,SAAS,EAAEC,MAAM,QAA2B,eAAe;AACpE,SAASC,aAAa,QAAQ,0BAA0B;AAExD,SAASC,YAAY,QAAQ,MAAM;AACnC,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,kBAAkB,QAAQ,8CAA8C;AACjF,SAASC,KAAK,EAAEC,KAAK,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,QAAQ,qBAAqB;AAChF,SAASC,YAAY,QAAQ,uBAAuB;AAc7C,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAYvBC,YACUC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAZd,KAAAC,MAAM,GAAGd,MAAM,CAACG,SAAS,CAAC;IAEnC,KAAAO,YAAY,GAAGA,YAAY;IAE3B,KAAAK,gBAAgB,GAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,WAAW,CAAC;IAC5D,KAAAC,wBAAwB,GAAa,CAAC,MAAM,EAAE,YAAY,EAAE,OAAO,CAAC;IAGpE,KAAAC,OAAO,GAAa,EAAE;IACtB,KAAAC,UAAU,GAAiB,IAAIhB,YAAY,EAAE;EAIzC;EAEJiB,QAAQA,CAAA;IACN,IAAI,CAACD,UAAU,GAAG,IAAI,CAACL,aAAa,CAACO,UAAU,EAAE,CAACC,SAAS,CAAEJ,OAAiB,IAAI;MAChF,IAAI,CAACA,OAAO,GAAGA,OAAO;IACxB,CAAC,CAAC;EACJ;EAEAK,mBAAmBA,CAAA;IACjB,IAAI,CAACR,MAAM,CAACS,IAAI,CAACnB,kBAAkB,EAAE;MAACoB,KAAK,EAAE;IAAQ,CAAC,CAAC;EACzD;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACP,UAAU,EAAEQ,WAAW,EAAE;EAChC;EAAC,QAAAC,CAAA,G;;;;AA5BUhB,YAAY,GAAAiB,UAAA,EAZxB7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,UAAU;EACpBC,QAAA,EAAAC,oBAAmC;EAEnCC,UAAU,EAAE,CACVvB,OAAO,CAAC,cAAc,EAAE,CACtBJ,KAAK,CAAC,WAAW,EAAEC,KAAK,CAAC;IAAC2B,MAAM,EAAE,KAAK;IAAEC,SAAS,EAAE;EAAG,CAAC,CAAC,CAAC,EAC1D7B,KAAK,CAAC,UAAU,EAAEC,KAAK,CAAC;IAAC2B,MAAM,EAAE;EAAG,CAAC,CAAC,CAAC,EACvC1B,UAAU,CAAC,wBAAwB,EAAEC,OAAO,CAAC,sCAAsC,CAAC,CAAC,CACtF,CAAC,CACH;;CACF,CAAC,C,EACWG,YAAY,CA6BxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}