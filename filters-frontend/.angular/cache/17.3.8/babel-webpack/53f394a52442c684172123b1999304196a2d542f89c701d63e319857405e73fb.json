{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./add-filter.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./add-filter.component.scss?ngResource\";\nimport { Component, inject } from '@angular/core';\nimport { UntypedFormBuilder, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CriteriaType } from '../../model/criteria-type';\nimport { CriteriaComparator } from '../../model/criteria-comparator';\nimport { FilterService } from '../../service/filter.service';\nlet AddFilterComponent = class AddFilterComponent {\n  constructor(formBuilder, filterService) {\n    this.formBuilder = formBuilder;\n    this.filterService = filterService;\n    this._snackBar = inject(MatSnackBar);\n    this.CriteriaType = CriteriaType;\n    this.CriteriaComparator = CriteriaComparator;\n  }\n  ngOnInit() {\n    this.filterForm = this.formBuilder.group({\n      filterName: this.formBuilder.control('', [Validators.required]),\n      criterias: this.formBuilder.array([this.formBuilder.group({\n        type: this.formBuilder.control(CriteriaType[CriteriaType.AMOUNT], [Validators.required]),\n        comparator: this.formBuilder.control(CriteriaComparator.MORE_THAN, [Validators.required]),\n        value: this.formBuilder.control(null, [Validators.required])\n      })])\n    });\n  }\n  get criteriasArray() {\n    return this.filterForm.get('criterias');\n  }\n  getCurrentCriteriaType(index) {\n    return this.filterForm.get('criterias').at(index).get('type')?.value;\n  }\n  criteriaTypeSelected(index, criteria) {\n    if (criteria.type.toString() === CriteriaType[CriteriaType.AMOUNT]) {\n      this.criteriasArray.at(index).get('comparator')?.setValue(CriteriaComparator.MORE_THAN);\n    } else if (criteria.type.toString() === CriteriaType[CriteriaType.TITLE]) {\n      this.criteriasArray.at(index).get('comparator')?.setValue(CriteriaComparator.STARTS_WITH);\n    } else {\n      this.criteriasArray.at(index).get('comparator')?.setValue(CriteriaComparator.FROM);\n    }\n  }\n  addCriteriaRow() {\n    const newCriteria = this.formBuilder.group({\n      type: this.formBuilder.control(CriteriaType[CriteriaType.AMOUNT], [Validators.required]),\n      comparator: this.formBuilder.control(CriteriaComparator.MORE_THAN, [Validators.required]),\n      value: this.formBuilder.control(null, [Validators.required])\n    });\n    this.criteriasArray.controls.push(newCriteria);\n  }\n  removeCriteriaRow(index) {\n    let formArray = this.filterForm.get('criterias');\n    formArray.removeAt(index);\n  }\n  saveFilter() {\n    const criteriasFormArray = this.filterForm.get('criterias');\n    const saveableCriterias = criteriasFormArray.controls.map(control => control.value);\n    const criterias = saveableCriterias.map(criteria => {\n      return {\n        type: criteria.type,\n        comparator: criteria.comparator,\n        ...(criteria.type.toString() === CriteriaType[CriteriaType.AMOUNT] ? {\n          amountValue: criteria.value\n        } : {}),\n        ...(criteria.type.toString() === CriteriaType[CriteriaType.TITLE] ? {\n          titleValue: criteria.value\n        } : {}),\n        ...(criteria.type.toString() === CriteriaType[CriteriaType.DATE] ? {\n          dateValue: criteria.value\n        } : {})\n      };\n    });\n    const saveableFilter = {\n      name: this.filterForm.get('filterName')?.value,\n      criterias: criterias\n    };\n    this.filterService.saveFilter(saveableFilter).subscribe({\n      next: () => {\n        this._snackBar.open(\"Filter saved!\");\n      },\n      error: () => {\n        this._snackBar.open(\"Error occured when saving a filter!\");\n      }\n    });\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: UntypedFormBuilder\n  }, {\n    type: FilterService\n  }];\n};\nAddFilterComponent = __decorate([Component({\n  selector: 'app-add-filter',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], AddFilterComponent);\nexport { AddFilterComponent };","map":{"version":3,"names":["Component","inject","UntypedFormBuilder","Validators","MatSnackBar","CriteriaType","CriteriaComparator","FilterService","AddFilterComponent","constructor","formBuilder","filterService","_snackBar","ngOnInit","filterForm","group","filterName","control","required","criterias","array","type","AMOUNT","comparator","MORE_THAN","value","criteriasArray","get","getCurrentCriteriaType","index","at","criteriaTypeSelected","criteria","toString","setValue","TITLE","STARTS_WITH","FROM","addCriteriaRow","newCriteria","controls","push","removeCriteriaRow","formArray","removeAt","saveFilter","criteriasFormArray","saveableCriterias","map","amountValue","titleValue","DATE","dateValue","saveableFilter","name","subscribe","next","open","error","_","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["/home/martin/Documents/Projects/filters/filters-frontend/src/app/components/add-filter/add-filter.component.ts"],"sourcesContent":["import { Component, inject, OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Criteria } from '../../model/criteria';\nimport { CriteriaType } from '../../model/criteria-type';\nimport { CriteriaComparator } from '../../model/criteria-comparator';\nimport { SaveableCriteria } from '../../model/saveable-criteria';\nimport { Filter } from '../../model/filter';\nimport { FilterService } from '../../service/filter.service';\n\n@Component({\n  selector: 'app-add-filter',\n  templateUrl: './add-filter.component.html',\n  styleUrl: './add-filter.component.scss'\n})\nexport class AddFilterComponent implements OnInit {\n\n  private _snackBar = inject(MatSnackBar);\n\n  CriteriaType = CriteriaType;\n  CriteriaComparator = CriteriaComparator;\n\n  filterForm: FormGroup;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private filterService: FilterService\n  ) {}\n\n  ngOnInit(): void {\n    this.filterForm = this.formBuilder.group({\n      filterName: this.formBuilder.control('', [Validators.required]),\n      criterias: this.formBuilder.array([\n        this.formBuilder.group({\n          type: this.formBuilder.control(CriteriaType[CriteriaType.AMOUNT], [Validators.required]),\n          comparator: this.formBuilder.control(CriteriaComparator.MORE_THAN, [Validators.required]),\n          value: this.formBuilder.control(null, [Validators.required])\n        })\n      ])\n    })\n\n  }\n\n  get criteriasArray() {\n    return <FormArray>this.filterForm.get('criterias');\n  }\n\n  getCurrentCriteriaType(index: number) {\n    return (this.filterForm.get('criterias') as FormArray).at(index).get('type')?.value;\n  }\n\n  criteriaTypeSelected(index: number, criteria: Criteria): void {\n    if (criteria.type.toString() === CriteriaType[CriteriaType.AMOUNT]) {\n      this.criteriasArray.at(index).get('comparator')?.setValue(CriteriaComparator.MORE_THAN);\n    } else if (criteria.type.toString() === CriteriaType[CriteriaType.TITLE]) {\n      this.criteriasArray.at(index).get('comparator')?.setValue(CriteriaComparator.STARTS_WITH);\n    } else {\n      this.criteriasArray.at(index).get('comparator')?.setValue(CriteriaComparator.FROM);\n    }\n  }\n\n  addCriteriaRow(): void {\n    const newCriteria = this.formBuilder.group({\n      type: this.formBuilder.control(CriteriaType[CriteriaType.AMOUNT], [Validators.required]),\n      comparator: this.formBuilder.control(CriteriaComparator.MORE_THAN, [Validators.required]),\n      value: this.formBuilder.control(null, [Validators.required])\n    });\n\n    this.criteriasArray.controls.push(newCriteria);\n  }\n\n  removeCriteriaRow(index: number): void {\n    let formArray: FormArray = this.filterForm.get('criterias') as FormArray;\n    formArray.removeAt(index);\n  }\n\n  saveFilter(): void {\n    const criteriasFormArray: FormArray = this.filterForm.get('criterias') as FormArray;\n    const saveableCriterias: SaveableCriteria[] = (criteriasFormArray.controls as FormControl[]).map((control: FormControl) => control.value);\n\n    const criterias = saveableCriterias.map(criteria => {\n      return <Criteria>{\n        type: criteria.type,\n        comparator: criteria.comparator,\n        ...(criteria.type.toString() === CriteriaType[CriteriaType.AMOUNT] ? { amountValue: criteria.value } : {}),\n        ...(criteria.type.toString() === CriteriaType[CriteriaType.TITLE] ? { titleValue: criteria.value } : {}),\n        ...(criteria.type.toString() === CriteriaType[CriteriaType.DATE] ? { dateValue: criteria.value } : {}),\n      };\n    })\n\n    const saveableFilter: Filter = {\n      name: this.filterForm.get('filterName')?.value,\n      criterias: criterias\n    }\n\n    this.filterService.saveFilter(saveableFilter).subscribe({\n      next: () => {\n        this._snackBar.open(\"Filter saved!\");\n      },\n      error: () => {\n        this._snackBar.open(\"Error occured when saving a filter!\");\n      }\n    });\n  }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}